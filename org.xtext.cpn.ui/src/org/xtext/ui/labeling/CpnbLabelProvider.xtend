/*
 * generated by Xtext 2.10.0
 */
package org.xtext.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.xtext.cpnb.Containement
import org.xtext.cpnb.CountedElement
import org.xtext.cpnb.Guarddef
import org.xtext.cpnb.Opr
import org.xtext.cpnb.Placedec
import org.xtext.cpnb.Transitiondeclation
import org.xtext.cpnb.inialisation

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class CpnbLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	 def text(Guarddef ele){
	 	'Gardef of'+ele.getTr().name
	 	
	 }

     def text( Containement ele){
     	if (ele.state!= null){
     		'Containment: ' + ele.state.name
     	}
     	else{
     		'Containment: '
     	}
     }
     def text( CountedElement ele){
     	ele.colr.name+{if(ele.counted!= 0){ ' : '+ ele.count} else " :1"}
     }
     def text( Opr ele){
     	if (ele.getStates.get(0)!= null){
     		if(ele.getOp!= null && ele.getOp=='+')
     	'Adding Op: ' + ele.getStates.get(0).name
     	    else if(ele.getOp!= null && ele.getOp=='-')
     	'Deleting Op: ' + ele.getStates.get(0).name
     	    else 'Operation: ' + ele.getStates.get(0).name
     	}
     	else'Operation: '
     		
     }
     def text( Placedec ele){
     	if(ele.name != null)"Place: "+ele.name else "Place:"
     	
     }
     def text(Transitiondeclation tr){
     	if(tr.name != null)"Transition: "+tr.name else "Transition:"
     }
     def text(inialisation init){
     	if (init.pl!=null)'Init: '+init.pl.name else "Init: "
     }
	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
